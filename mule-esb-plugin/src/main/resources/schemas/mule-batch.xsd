<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/batch"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
            targetNamespace="http://www.mulesoft.org/schema/mule/batch"
            elementFormDefault="qualified" attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:import namespace="http://www.mulesoft.org/schema/mule/core"
                schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"/>


    <xsd:element name="job" type="jobType" substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Defines a BatchJob and creates an instance per each event that runs through this processor
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="jobType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractMessageProcessorType">
                <xsd:sequence>
                    <xsd:element name="history" type="historyType" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>
                                Configures historic record keeping about executed job instances
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="process-records" maxOccurs="1" minOccurs="1"/>
                    <xsd:element ref="on-complete" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="jobName" use="required" type="xsd:string"/>
                <xsd:attribute name="maxFailedRecords" default="0" type="mule:substitutableInt"/>
                <xsd:attribute name="blockSize" default="100" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            For performance reasons, batch records are queued and scheduled in blocks. This
                            attribute sets size of the block that should be used for instances of this job.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="maxConcurrency" type="mule:substitutableInt">
                    <xsd:annotation>
                        <xsd:documentation>
                            The maximum concurrency. This value determines the maximum level of parallelism that the Job
                            can use to optimize for performance when processing blocks.
                            If no value is provided, the default is twice the number of available cores in the CPU(s).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="jobInstanceId" type="xsd:string" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>
                            An optional expression which allows giving each spawned JobInstance a friendly name.
                            If provided, this attribute is required to have a MEL expression which provides unique
                            values.
                            An InitialisationException will be thrown if a constant value is set.
                            A RuntimeException will be thrown when this expression returns a value previously seen.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="schedulingStrategy" default="ORDERED_SEQUENTIAL">
                    <xsd:annotation>
                        <xsd:documentation>
                            In the event of two or more instances of the same job being in executable state, this
                            scheduling strategy
                            specifies how the job's scheduler should be shared across those instances.
                            This is specific to each batch job. If your application has several jobs, each can have a
                            different strategies
                            and each job instance will behave according to the strategy configured in its job.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                        <xsd:restriction base="mule:substitutableName">
                            <xsd:enumeration value="ORDERED_SEQUENTIAL">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        In this strategy, only one job instance is executed at the time. The executing
                                        instance is selected by looking at the lowest
                                        creation time. Other job instances won't be executed until the current one
                                        doesn't exit the executable state
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ROUND_ROBIN">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        In this strategy, a round robin algorithm is used to fairly share the scheduler
                                        resources across all executable job instances.
                                        This means that all available jobs will be executed at the same time
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute type="xsd:string" use="optional" name="target">
                    <xsd:annotation>
                        <xsd:documentation>The name of a variable on which the operation's output will be placed
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute type="mule:expressionString" use="optional" name="targetValue" default="#[payload]">
                    <xsd:annotation>
                        <xsd:documentation>An expression that will be evaluated against the operation's output and the
                            outcome of that expression will be stored in the target variable
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="historyType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                <xsd:sequence>
                    <xsd:element name="expiration" type="historyExpirationType" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>
                                How long to keep job instances in not executable states before
                                removing them from the data store.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="historyExpirationType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractExtensionType">
                <xsd:attribute name="maxAge" type="mule:substitutableLong" use="required"/>
                <xsd:attribute name="ageUnit" type="mule:timeUnitType" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="process-records" type="processRecordsType">
        <xsd:annotation>
            <xsd:documentation>
                Does something for every item inside the
                collection.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="processRecordsType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractMessageProcessorType">
                <xsd:sequence>
                    <xsd:element ref="step" maxOccurs="unbounded" minOccurs="1"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="step" type="stepType">
        <xsd:annotation>
            <xsd:documentation>
                A processing unit between a batch job
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="stepType">
        <xsd:complexContent>
            <xsd:extension base="mule:annotatedType">
                <xsd:sequence>
                    <xsd:group ref="mule:messageProcessorOrMixedContentMessageProcessor"
                               maxOccurs="unbounded"/>
                    <xsd:element ref="aggregator" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:string" use="required"/>
                <xsd:attribute name="acceptPolicy" default="NO_FAILURES">
                    <xsd:simpleType>
                        <xsd:restriction base="mule:substitutableName">
                            <xsd:enumeration value="ALL"/>
                            <xsd:enumeration value="ONLY_FAILURES"/>
                            <xsd:enumeration value="NO_FAILURES"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="acceptExpression" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="on-complete" type="onCompleteType">
        <xsd:annotation>
            <xsd:documentation>
                This block contains a message processor chain that
                receives a message which payload is a BatchJobResult object
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="onCompleteType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractMessageProcessorType">
                <xsd:sequence>
                    <xsd:group ref="mule:messageProcessorOrMixedContentMessageProcessor"
                               maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="expression" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="aggregator" type="stepAggregatorType"
                 substitutionGroup="mule:abstract-message-processor">
        <xsd:annotation>
            <xsd:documentation>
                Aggregates records so that they can be processed in bulk before being passed over to the next step
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType name="stepAggregatorType">
        <xsd:complexContent>
            <xsd:extension base="mule:abstractMessageProcessorType">
                <xsd:sequence>
                    <xsd:group ref="mule:messageProcessorOrMixedContentMessageProcessor"
                               maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="size" type="mule:substitutableInt" use="optional"/>
                <xsd:attribute name="streaming" type="mule:substitutableBoolean" use="optional" default="false"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
</xsd:schema>